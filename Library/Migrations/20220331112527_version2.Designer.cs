// <auto-generated />
using System;
using Library;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220331112527_version2")]
    partial class version2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Library.InternationalPassportInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InternationalPassportFirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InternationalPassportLastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PassportInfoKey")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PassportInfoKey")
                        .IsUnique();

                    b.ToTable("internationalPassportInfos");
                });

            modelBuilder.Entity("Library.InternationalPassportInfoVisaInfo", b =>
                {
                    b.Property<int>("VisaInfoId")
                        .HasColumnType("integer");

                    b.Property<int>("InternationalPassportId")
                        .HasColumnType("integer");

                    b.HasKey("VisaInfoId", "InternationalPassportId");

                    b.HasIndex("InternationalPassportId");

                    b.ToTable("InternationalPassportInfoVisaInfo");
                });

            modelBuilder.Entity("Library.NationalityInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NationalityInfos");
                });

            modelBuilder.Entity("Library.PassportInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NationalityInfosId")
                        .HasColumnType("integer");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NationalityInfosId");

                    b.ToTable("Passports");
                });

            modelBuilder.Entity("Library.VisaInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("VisaEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("VisaStart")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("VisaInfos");
                });

            modelBuilder.Entity("Library.InternationalPassportInfo", b =>
                {
                    b.HasOne("Library.PassportInfo", "PassportInfo")
                        .WithOne("InternationalPassportInfo")
                        .HasForeignKey("Library.InternationalPassportInfo", "PassportInfoKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PassportInfo");
                });

            modelBuilder.Entity("Library.InternationalPassportInfoVisaInfo", b =>
                {
                    b.HasOne("Library.InternationalPassportInfo", "InternationalPassportInfo")
                        .WithMany("InternationalPassportInfoVisaInfos")
                        .HasForeignKey("InternationalPassportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.VisaInfo", "VisaInfo")
                        .WithMany("InternationalPassportInfoVisaInfos")
                        .HasForeignKey("VisaInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternationalPassportInfo");

                    b.Navigation("VisaInfo");
                });

            modelBuilder.Entity("Library.PassportInfo", b =>
                {
                    b.HasOne("Library.NationalityInfo", "NationalityInfos")
                        .WithMany("Passport")
                        .HasForeignKey("NationalityInfosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NationalityInfos");
                });

            modelBuilder.Entity("Library.InternationalPassportInfo", b =>
                {
                    b.Navigation("InternationalPassportInfoVisaInfos");
                });

            modelBuilder.Entity("Library.NationalityInfo", b =>
                {
                    b.Navigation("Passport");
                });

            modelBuilder.Entity("Library.PassportInfo", b =>
                {
                    b.Navigation("InternationalPassportInfo");
                });

            modelBuilder.Entity("Library.VisaInfo", b =>
                {
                    b.Navigation("InternationalPassportInfoVisaInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
